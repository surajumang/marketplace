Member table
1       ID              INT(10)                 AUTO INCREMENT
2       First_Name      VARCHAR(100)             NOT NULL
3       Last_Name       VARCHAR(100)             NOT NULL
4       Phone           INT(10)
6       Member_Type     ENUM {Seeker, Sitter, Admin}
5       Email(ID)       VARCHAR(100)
7       Address         VARCHAR(250)

9       Zip_code        INT(6)                  NOT NULL
10      Status          ENUM {Active, Inactive} DEFAULT ACTIVE
11      LAST_MODIFIED   TIMESTAMP              ON UPDATE
12      Password        VARCHAR(30)             NOT NULL
PrimaryKey (Email)

Add cascade related info.
If the member's status changes to inactive then all jobs posted by him and all jobs applied by him
must also be marked inactive.use triggers.

CREATE TABLE SEEKER(
       ID              INT(10)  ,
       NO_CHILDREN     INT(3)   ,
       SPOUSE_NAME     VARCHAR(50),
       FOREIGN KEY (ID) REFERENCES MEMBER(ID)
);

CREATE TABLE SITTER (
       ID               INT(10)         PRIMARY KEY,
       EXPERIENCE       INT(2)          NOT NULL,
       EXPECTED_PAY     DECIMAL(5, 2)   NOT NULL,
       FOREIGN KEY (ID) REFERENCES MEMBER(ID)
);

CREATE TABLE JOB (
       ID              INT(10)         AUTO_INCREMENT PRIMARY KEY,
       TITLE           VARCHAR(100)    NOT NULL,
       POSTED_BY       INT(10)         NOT NULL,
       HOURLY_PAY      DECIMAL(5,3)    NOT NULL,
       START_DATE      DATE            NOT NULL,
       END_DATE        DATE            NOT NULL,
       DATE_CREATED    DATE            NOT NULL,
       STATUS          ENUM ("ACTIVE", "INACTIVE") DEFAULT "ACTIVE" NOT NULL,
       LAST_MODIFIED   TIMESTAMP  DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
       FOREIGN KEY (POSTED_BY) REFERENCES SEEKER(ID)
);

CREATE TABLE APPLICATION(
       ID              INT(10)         AUTO_INCREMENT PRIMARY KEY,
       JOB_ID          INT(10)    ,    AUTO_INCREMENT
       MEMBER_ID INT(10) ,
       EXPECTED_PAY    DECIMAL(5,3)    NOT NULL,
       STATUS         ENUM ("ACTIVE", "INACTIVE") DEFAULT "ACTIVE" NOT NULL ,
       DATE_CREATED    DATE     NOT NULL ,
       LAST_MODIFIED   TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
       FOREIGN KEY (JOB_ID) REFERENCES JOB(ID),
       FOREIGN KEY (MEMBER_ID) REFERENCES SITTER(ID)
);

create table MEMBER (
        ID              INT(10)                 NOT NULL AUTO_INCREMENT PRIMARY KEY,
        FIRST_NAME      VARCHAR(100)             NOT NULL,
        LAST_NAME      VARCHAR(100)             NOT NULL,
        PHONE           INT(10)                 NOT NULL,
        MEMBER_TYPE     ENUM ("SEEKER", "SITTER", "ADMIN") DEFAULT "SEEKER" ,
        EMAIL       VARCHAR(100)            UNIQUE NOT NULL,
        ADDRESS         VARCHAR(250)  ,
        ZIP_CODE        INT(6)                  NOT NULL,
        STATUS        ENUM ("ACTIVE", "INACTIVE") DEFAULT "ACTIVE",
        LAST_MODIFIED   TIMESTAMP  DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
        PASSWORD        VARCHAR(30)             NOT NULL
  );
insert into MEMBER(first_name, last_name, phone, email, zip_code, password)
values("suraj", "kumar", 1234, "a@a", 234314, "efjnkj");
